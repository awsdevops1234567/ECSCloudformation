AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for creating a task definition"
Resources:
  MyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn: "arn:aws:iam::424472191455:role/ecsrole"
      Cpu: 256
      Memory: 512
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "myawsplanet"
          Image: "424472191455.dkr.ecr.us-east-1.amazonaws.com/hari:latest"
          MemoryReservation: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: MyFargateCluster
  FargateAlb:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: FargateAlb
      Subnets:
        - subnet-042f00d6ff715a61e
        - subnet-0cf40dd61abebdeaf
        - subnet-0374759fbae30e442
      Type: application
      SecurityGroups:
        - !GetAtt FargateAlbSG.GroupId
  MyFargateTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: MyFargateTargetGroup
      VpcId: vpc-0542842a1764afa86
      Protocol: HTTP
      Port: 8080
      HealthCheckPath: /actuator/
      TargetType: ip
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MyFargateTargetGroup
          Type: forward
      LoadBalancerArn: !Ref FargateAlb
      Port: 80
      Protocol: HTTP
  FargateAlbSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for the Fargate ALB
      GroupName: FargateAlbSG
      SecurityGroupIngress:
        - CidrIpv6: ::/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv6 traffic'
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv4 traffic'
  Alb2FargateContainers:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for traffic between ALB and containers
      GroupName: Alb2FargateContainers
      SecurityGroupIngress:
        - IpProtocol: -1
          SourceSecurityGroupId: !GetAtt FargateAlbSG.GroupId
          Description: 'Inbound rule for all traffic'
  MyECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - Listener
    Properties:
      LaunchType: FARGATE
      Cluster:
        Ref: "ECSCluster"
      DesiredCount: 4
      TaskDefinition:
        Ref: "MyTaskDefinition"
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt Alb2FargateContainers.GroupId
          Subnets: ['subnet-042f00d6ff715a61e','subnet-0cf40dd61abebdeaf','subnet-0374759fbae30e442']
      LoadBalancers:
        - TargetGroupArn:
            Ref: MyFargateTargetGroup
          ContainerPort: 8080
          ContainerName: myawsplanet
